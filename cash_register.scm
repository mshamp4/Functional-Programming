(load-option 'format)
(define tax_rate 0.065)
(define (start)
    (display "Scheme Point-of-Sale\n")
    (display "Start transaction (exit with 0):\n\n")
    (display "Enter value: ")
    (let ((num (convertFloat (format #f "~a" (read))))) (getValue num 0))
)

(define (getValue input subtotal)
    (cond
        ((equal? input 0)
        (display "Subtotal: $")
        (display subtotal)
        (display "\n")
        (display "Tax: $")
        (display (* subtotal tax_rate))
        (display "\n")
        (display "Total: $")
        (display (+ subtotal (* subtotal tax_rate))) #t)
    (else (display (string-append "$" (format #f "~a" input) "\n"))
        (display "\nEnter value: ")
        (let ((num (convertFloat (format #f "~a" (read)))))(getValue num (+ input subtotal)))
    )
    )
)

(define (convertFloat input)
    (string->number (substring input 1 (string-length input)))
)

